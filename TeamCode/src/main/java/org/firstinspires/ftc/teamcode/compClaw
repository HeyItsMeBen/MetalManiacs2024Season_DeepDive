package org.firstinspires.ftc.teamcode;

import static java.lang.Thread.sleep;

import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.HardwareMap;
import com.qualcomm.robotcore.hardware.Servo;


public class compClaw {
    public DcMotor arm = null;
    Servo leftClaw;
    Servo rightClaw;
    Servo leftSlideServo;
    Servo rightSlideServo;
    public compClaw (HardwareMap hMap) {
        arm=hMap.get(DcMotor.class, "arm");
        leftClaw=hMap.get(Servo.class, "leftClaw");
        rightClaw=hMap.get(Servo.class, "rightClaw");
        leftSlideServo=hMap.get(Servo.class, "leftSlideServo");
        rightSlideServo=hMap.get(Servo.class, "rightSlideServo");
        arm.setDirection(DcMotorSimple.Direction.FORWARD);
        arm.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
    }


    //arm methods
    public void clawGrab(){
        leftClaw.setPosition(180);
        rightClaw.setPosition(0);
    }
    public void clawRelease(){
        leftClaw.setPosition(0);
        rightClaw.setPosition(180);
    }
    public void moveArm(double power, int time) {
        arm.setPower(power);
        //sleep(time);
    }
    //linear slide and servo methods
    public void slidesSqueeze(){
        leftSlideServo.setPosition(180);
        rightSlideServo.setPosition(0);
    }
    public void slidesRelease(){
        leftSlideServo.setPosition(0);
        rightSlideServo.setPosition(180);
    }
}
